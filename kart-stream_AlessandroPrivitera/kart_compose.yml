version: '3'
services:

  kart-logs-producer:
    container_name: kart-logs-producer
    build:
      context: python_log_producer
      dockerfile: Dockerfile
    environment:
      URL: http://kart-logs-ingestor:9090
    depends_on:
      init-kafka:
        condition: service_completed_successfully


  kart-logs-ingestor:
    hostname: kart-logs-ingestor
    image: docker.elastic.co/logstash/logstash:8.13.0
    container_name: kart-logs-ingestor
    environment:
      XPACK_MONITORING_ENABLED: "false"
    ports:
      - 9090:9090
    volumes:
      - ./kart-logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  zookeeper:
    hostname: zookeeper
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      echo -e 'Creating kafka topics...'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic triage --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic recoverable --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic scrap --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    depends_on:
      - kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka

  kafka-stream:
    hostname: kafka-stream
    container_name: kafka-stream
    image: confluentinc/cp-kafka
    volumes:
      - ./stream_java/app/build/libs/app-1.0.jar:/home/appuser/stream.jar
    command: java -jar /home/appuser/stream.jar
    depends_on:
      init-kafka:
        condition: service_completed_successfully

  recoverable-consumer:
    hostname: recoverable-consumer
    image: "confluentinc/cp-kafka:latest"
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    command: "kafka-console-consumer --topic recoverable --bootstrap-server kafka:9092 --from-beginning"

  scrap-consumer:
    hostname: scrap-consumer
    image: "confluentinc/cp-kafka:latest"
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    command: "kafka-console-consumer --topic scrap --bootstrap-server kafka:9092 --from-beginning"

    